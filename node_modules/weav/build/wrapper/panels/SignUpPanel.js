'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ErrorBar = require('../bars/ErrorBar');

var _ErrorBar2 = _interopRequireDefault(_ErrorBar);

var _Panel = require('./Panel');

var _Panel2 = _interopRequireDefault(_Panel);

var _Textbox = require('../textboxes/Textbox');

var _Textbox2 = _interopRequireDefault(_Textbox);

var _Button = require('../buttons/Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SignUpPanel = function (_Component) {
  _inherits(SignUpPanel, _Component);

  function SignUpPanel(props) {
    _classCallCheck(this, SignUpPanel);

    var _this = _possibleConstructorReturn(this, (SignUpPanel.__proto__ || Object.getPrototypeOf(SignUpPanel)).call(this, props));

    _this.state = {
      email: '',
      password: ''
    };

    _this.onEmailTextboxChange = _this.onEmailTextboxChange.bind(_this);
    _this.onPasswordTextboxChange = _this.onPasswordTextboxChange.bind(_this);
    return _this;
  }

  _createClass(SignUpPanel, [{
    key: 'onEmailTextboxChange',
    value: function onEmailTextboxChange(event) {
      this.setState({
        email: event.target.value
      });
    }
  }, {
    key: 'onPasswordTextboxChange',
    value: function onPasswordTextboxChange(event) {
      this.setState({
        password: event.target.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          error = _props.error,
          handleSubmit = _props.handleSubmit;
      var _state = this.state,
          email = _state.email,
          password = _state.password;


      return _react2.default.createElement(
        _Panel2.default,
        {
          style: {
            maxWidth: 400
          }
        },
        error ? _react2.default.createElement(_ErrorBar2.default, {
          text: error
        }) : null,
        _react2.default.createElement(_Textbox2.default, {
          value: email,
          onChange: this.onEmailTextboxChange,
          label: 'Email',
          style: {
            maxWidth: '100%',
            fontSize: 14
          },
          wrapperStyle: {
            maxWidth: '100%'
          }
        }),
        _react2.default.createElement('div', { style: { height: 5 } }),
        _react2.default.createElement(_Textbox2.default, {
          value: password,
          onChange: this.onPasswordTextboxChange,
          label: 'Password',
          style: {
            maxWidth: '100%',
            fontSize: 14
          },
          wrapperStyle: {
            maxWidth: '100%'
          }
        }),
        _react2.default.createElement('div', { style: { height: 5 } }),
        _react2.default.createElement(
          'div',
          {
            style: {
              textAlign: 'center'
            }
          },
          _react2.default.createElement(
            _Button2.default,
            {
              onClick: handleSubmit
            },
            'Sign Up'
          )
        )
      );
    }
  }]);

  return SignUpPanel;
}(_react.Component);

SignUpPanel.propTypes = {
  error: _propTypes2.default.string,
  handleSubmit: _propTypes2.default.func
};

SignUpPanel.defaultProps = {
  error: null,
  handleSubmit: function handleSubmit() {}
};

exports.default = SignUpPanel;